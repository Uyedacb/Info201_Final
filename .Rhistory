# install.packages("dyplr")
# install.packages()
# install.packages()
# install.packages()
library()
library()
library("dyplr")
library("ggplot2")
library("shiny")
library("rsconnect")
filtered_nsduh <- read.csv("Q4_data/Q4_comparision.csv")
setwd("C:/Users/bmwuy_uwzsm3c/Documents/Github/INFO201/Info201_Final")
library("dyplr")
library("ggplot2")
library("shiny")
library("rsconnect")
filtered_nsduh <- read.csv("Q4_data/Q4_comparision.csv")
add_trace(data = df,
x = x, y = y, mode = "markers",
marker = list(color = "white",
size = 10,
line = list(width = 2)),
hoverinfo = "none",
showlegend = F) %&gt;%
layout(xaxis = list(title = "", showgrid = F, zeroline = F, showticklabels = F,
domain = c(0.02, 0.48)),
yaxis = list(title = "", showgrid = F, zeroline = F, showticklabels = F,
domain = c(0, 0.92)),
font = list(family = "serif", size = 15),
legend = list(x = 0.55, y = 0.9, bgcolor = "transparent"),
plot_bgcolor = bgcolor,
paper_bgcolor = bgcolor)
coords$Complaint, ":",
round(coords$Percent*100, 2), "%"))
# Plot
smooth %
add_trace(data = df,
x = x, y = y, mode = "markers",
marker = list(color = "white",
size = 10,
line = list(width = 2)),
hoverinfo = "none",
showlegend = F) %&gt;%
layout(xaxis = list(title = "", showgrid = F, zeroline = F, showticklabels = F,
domain = c(0.02, 0.48)),
yaxis = list(title = "", showgrid = F, zeroline = F, showticklabels = F,
domain = c(0, 0.92)),
font = list(family = "serif", size = 15),
legend = list(x = 0.55, y = 0.9, bgcolor = "transparent"),
plot_bgcolor = bgcolor,
paper_bgcolor = bgcolor)
library(plotly)
library(dplyr)
add_trace(data = df,
x = x, y = y, mode = "markers",
marker = list(color = "white",
size = 10,
line = list(width = 2)),
hoverinfo = "none",
showlegend = F) %&gt;%
layout(xaxis = list(title = "", showgrid = F, zeroline = F, showticklabels = F,
domain = c(0.02, 0.48)),
yaxis = list(title = "", showgrid = F, zeroline = F, showticklabels = F,
domain = c(0, 0.92)),
font = list(family = "serif", size = 15),
legend = list(x = 0.55, y = 0.9, bgcolor = "transparent"),
plot_bgcolor = bgcolor,
paper_bgcolor = bgcolor)
add_trace(data = df,
x = x, y = y, mode = "markers",
marker = list(color = "white",
size = 10,
line = list(width = 2)),
hoverinfo = "none",
showlegend = F)
library(shiny)
library(shiny)
filtered_nsduh <- read.csv("Q4_data/Q4_comparision.csv")
?colnames
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/bmwuy_uwzsm3c/Documents/Github/INFO201/Info201_Final")
runApp()
View(filtered_nsduh)
View(filtered_nsduh)
runApp()
runApp()
compare_one
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one[, "adsmmdea" == 1],
"Plans of Suicide" = compare_one[, "AD_MDEA9" == 1],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_one[, "adrxnow" == 1])
compare_two <- filter(filtered_nsduh, NEWRACE2 == 2) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_two <- list("Depression" = compare_two[, "adsmmdea" == 1],
"Plans of Suicide" = compare_two[, "AD_MDEA9" == 1],
"Recieving Counseling" = compare_two[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_two[, "adrxnow" == 1])
compare one
compare_one
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one["adsmmdea" == 1, "adsmmdea",
"Plans of Suicide" = compare_one[, "AD_MDEA9" == 1],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_one[, "adrxnow" == 1])
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one["adsmmdea" == 1, "adsmmdea"],
"Plans of Suicide" = compare_one[, "AD_MDEA9" == 1],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_one[, "adrxnow" == 1])
compare_one
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one[compare_one$adsmmdea == 1, "adsmmdea"],
"Plans of Suicide" = compare_one[, "AD_MDEA9" == 1],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_one[, "adrxnow" == 1])
View(compare_one)
View(compare_one)
compare_one
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one[compare_one$adsmmdea == 1, "adsmmdea"],
"Plans of Suicide" = compare_one[compare_one$AD_MDEA9,  "AD_MDEA9"],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one[compare_one$adsmmdea == 1, "adsmmdea"],
"Plans of Suicide" = compare_one[compare_one$AD_MDEA9 == 1,  "AD_MDEA9"],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_one[, "adrxnow" == 1])
compare_one <- filter(filtered_nsduh, NEWRACE2 == 1) %>%
select(adsmmdea, AD_MDEA9, adrxnow, adtmtnow)
compare_one <- list("Depression" = compare_one[compare_one$adsmmdea == 1, "adsmmdea"],
"Plans of Suicide" = compare_one[compare_one$AD_MDEA9 == 1,  "AD_MDEA9"],
"Recieving Counseling" = compare_one[, "adtmtnow" == 1],
"Taking Prescription Meds" = compare_one[, "adrxnow" == 1])
compare_one
View(compare_one)
View(compare_one)
runApp()
runApp()
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = c(39, 28, 8, 7, 28, 39),
theta = c('A','B','C', 'D', 'E', 'A'),
name = 'Group A'
) %>%
add_trace(
r = c(1.5, 10, 39, 31, 15, 1.5),
theta = c('A','B','C', 'D', 'E', 'A'),
name = 'Group B'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,50)
)
)
)
p
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = c(39, 28, 8, 7, 28, 39),
theta = c('A','B','C', 'D', 'E', 'A'),
name = 'Group A'
) %>%
add_trace(
r = c(1.5, 10, 39, 31, 15, 1.5),
theta = c('A','B','C', 'D', 'E', 'A'),
name = 'Group B'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,50)
)
)
)
p
devtools::install_github("ropensci/plotly")
install.packages("ggradar")
library(ggplot2)
ggplot2
install.packages("ggplot2")
install.packages("chartjs")
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runExampleApp("options")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dp_filter <- list(1 = c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow")
dp_filter[seq(2:5)] = c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow")
dp_filter <- list(1 = c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"))
dp_filter[seq(2:5)] = c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow")
dp_filter <- list(1 = c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"))
dp_filter[seq(2:5)] = c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow")
dp_filter <- list(c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"))
dp_filter[seq(2:5)] = c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow")
View(dp_filter)
View(dp_filter)
?seq()
dp_filter <- list(c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"))
dp_filter[seq(2,5,1)] = c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow")
View(dp_filter)
View(dp_filter)
dp_filter <- list(c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"))
dp_filter[seq(2,5)] = c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow")
dp_filter= lapply(c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"))
?rep
dp_filter <- list(c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"))
dp_filter = mget(paste0(c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"), 2:5))
df <- data.frame("E" = c(1, 3, 2, 1, 1))
View(df)
library(dplyr)
filtertest <- filter(df, "E" == c(1, 2, 3))
names <- c(1, 2, 3)
filtertest <- filter(df, E %in% names)
ethnicity <- list(c(1,2,3,4,5,6), all = c(1, 2, 3, 4, 5, 6))
View(ethnicity)
View(ethnicity)
ethnicity <- list(c(1,2,3,4,5,6))
ethnicity <- list(c(1,2,3,4,5,6, c(1,2,3,4,5,6)))
runApp()
runApp()
age_one <- 2
age_two <- 2
ethnicity_one <- 1
ethnicity_two <- 2
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[2]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[2], "POVERTY3")
)
variable_one <- percentage_filter(variable_one, dp_filter[[2]])
variable_two <- percentage_filter(variable_two, dp_filter[[2]])
percentage_filter <- function(variable_data, variable_names) {
percentage_list <- list()
sum_data <- colSums(variable_data == 1, na.rm = TRUE)
percentage_list[c(variable_names, "POVERTY3")] <- round((sum_data / nrow(variable_data)) * 100, 2)
}
age_one <- 2
age_two <- 2
ethnicity_one <- 1
ethnicity_two <- 2
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[2]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[2]], "POVERTY3")
)
variable_one <- percentage_filter(variable_one, dp_filter[[2]])
variable_two <- percentage_filter(variable_two, dp_filter[[2]])
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[2]], "POVERTY3")
)
variable_one <- unname(percentage_filter(variable_one, dp_filter[[2]]))
runApp()
age_one <- 1
age_two <- 1
ethnicity_one <- 2
ethnicity_two <- 2
if (input$ethnicity_one == 0) {
ethnicity_one <- seq(1,6)
}
if (input$ethnicity_two == 0) {
ethnicity_two <- seq(1,6)
}
if (input$age_range_one == 6) {
age_one <- seq(2,5)
}
if (input$age_range_two == 6) {
age_two <- seq(2,5)
}
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_one <- percentage_filter(variable_one, dp_filter[[1]])
variable_two <- percentage_filter(variable_two, dp_filter[[1]])
percentage_filter <- function(variable_data, variable_names) {
percentage_list <- list()
sum_data <- colSums(variable_data == 1, na.rm = TRUE)
percentage_list[c(variable_names, "POVERTY3")] <- round((sum_data / nrow(variable_data)) * 100, 2)
}
age_one <- 1
age_two <- 1
ethnicity_one <- 2
ethnicity_two <- 2
if (input$ethnicity_one == 0) {
ethnicity_one <- seq(1,6)
}
if (input$ethnicity_two == 0) {
ethnicity_two <- seq(1,6)
}
if (input$age_range_one == 6) {
age_one <- seq(2,5)
}
if (input$age_range_two == 6) {
age_two <- seq(2,5)
}
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_one <- percentage_filter(variable_one, dp_filter[[1]])
variable_two <- percentage_filter(variable_two, dp_filter[[1]])
filtered_nsduh <- read.csv("Q4_data/Q4_comparision.csv")
ethnic_groups <- list(
"White" = 1, "African-American" = 2,
"Hispanic or Latino" = 7,
"American Indian & Alaska Native" = 3,
"Asian" = 5, "Pacific Islander" = 4,
"More than one Ethnicity" = 6,
"All Ethnicities" = 0)
age_groups <- list(
"12-17 Years Old" = 1,
"18-25 Years Old" = 2,
"26-34 Years Old" = 3,
"35-49 Years Old" = 4,
"50 or Older" = 5,
"18 or Older" = 6
)
dp_filter <- list(c("YO_MDEA9", "yodsmmde", "yorxnow", "yotmtnow"), c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"),
c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"), c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"),
c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"), c("AD_MDEA9", "adsmmdea","adrxnow", "adtmtnow"))
age_one <- 1
age_two <- 1
ethnicity_one <- 2
ethnicity_two <- 2
if (input$ethnicity_one == 0) {
ethnicity_one <- seq(1,6)
}
if (input$ethnicity_two == 0) {
ethnicity_two <- seq(1,6)
}
if (input$age_range_one == 6) {
age_one <- seq(2,5)
}
if (input$age_range_two == 6) {
age_two <- seq(2,5)
}
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_one <- percentage_filter(variable_one, dp_filter[[1]])
variable_two <- percentage_filter(variable_two, dp_filter[[1]])
percentage_filter <- function(variable_data, variable_names) {
percentage_list <- list()
sum_data <- colSums(variable_data == 1, na.rm = TRUE)
percentage_list[c(variable_names, "POVERTY3")] <- paste0(round((sum_data / nrow(variable_data)) * 100, 2),"L")
}
age_one <- 1
age_two <- 1
ethnicity_one <- 2
ethnicity_two <- 2
if (input$ethnicity_one == 0) {
ethnicity_one <- seq(1,6)
}
if (input$ethnicity_two == 0) {
ethnicity_two <- seq(1,6)
}
if (input$age_range_one == 6) {
age_one <- seq(2,5)
}
if (input$age_range_two == 6) {
age_two <- seq(2,5)
}
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_one <- percentage_filter(variable_one, dp_filter[[1]])
variable_two <- percentage_filter(variable_two, dp_filter[[1]])
return(c(1,2,3,4,5))
age_one <- 1
age_two <- 1
ethnicity_one <- 2
ethnicity_two <- 2
if (input$ethnicity_one == 0) {
ethnicity_one <- seq(1,6)
}
if (input$ethnicity_two == 0) {
ethnicity_two <- seq(1,6)
}
if (input$age_range_one == 6) {
age_one <- seq(2,5)
}
if (input$age_range_two == 6) {
age_two <- seq(2,5)
}
variable_one <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_one & CATAG3 %in% age_one,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_two <- subset(
filtered_nsduh, NEWRACE2 %in% ethnicity_two & CATAG3 %in% age_two,
select = c(dp_filter[[1]], "POVERTY3")
)
variable_one <- as.numeric(percentage_filter(variable_one, dp_filter[[1]]))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("plyr"
)
install.packages("plyr")
shiny::runApp()
library(plyr)
runApp()
runApp()
runApp()
shiny::runApp()
df_sum <- subset(filtered_nsduh,NEWRACE2 == 1 & CATAG3 %in% age, select= c(dp_filter[[2]],dp_filter[[1]], "POVERTY3"))
source("spider-functions.R")
df <- data.frame("E" = c(1, 3, 2, 1, 1))
names <- c(1, 2, 3)
filtertest <- filter(df, E %in% names)
age <- seq(1,5)
existing <- match(dp_filter[[1]], names(df_sum))
newNames <- dp_filter[[2]]
names(df_sum)[na.omit(existing)] <- newNames[which(!is.na(existing))]
df_binded <- rbind(df_sum[c(1,2,3,4,9)], df_sum[5:9])
df_sum <- subset(filtered_nsduh,NEWRACE2 == 1 & CATAG3 %in% age, select= c(dp_filter[[2]],dp_filter[[1]], "POVERTY3"))
df_sum <- df_sum[1:20,]
df_sum[1,1] <- "test1"
df_sum[1,9] <- "testing"
df_sum[1,5] <- "test1"
df_sum_old <- select(df_sum, dp_filter[[2]])
sum_old <- colSums(df_sum_old == 1, na.rm = TRUE)
df_binded_sum <- colSums(df_binded == 1, na.rm = TRUE)
df_binded <- rbind(df_sum[c(1,2,3,4,9)], df_sum[5:9])
existing <- match(dp_filter[[1]], names(df_sum))
newNames <- dp_filter[[2]]
names(df_sum)[na.omit(existing)] <- newNames[which(!is.na(existing))]
df_binded <- rbind(df_sum[c(1,2,3,4,9)], df_sum[5:9])
runApp()
runApp()
runApp()
runApp()
library(shiny); runApp('run_shiny_applet.R')
install.packages("ggplot2")
runApp('run_shiny_applet.R')
runApp('run_shiny_applet.R')
runApp('run_shiny_applet.R')
runApp('run_shiny_applet.R')
